global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  #- job_name: 'prometheus'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
  #  scrape_interval: 5s
  #  static_configs:
  #    - targets: ['localhost:9090']

  #- job_name: 'node'
  #  scrape_interval: 8s
  #  static_configs:
  #    - targets: ['node-exporter:9100', 'node-exporter2:9100']

  - job_name: 'zhibo'
    metrics_path: '/actuator/prometheus'
    # controls how often Prometheus will scrape targets
    scrape_interval: 10s
    # controls how often Prometheus will evaluate rules. Prometheus uses rules to create new time series and to generate alerts
    # evaluation_interval: 10s
    static_configs:
      - targets: ['192.168.241.52:8080']

  - job_name: 'achilles'
    metrics_path: '/metrics'
    # controls how often Prometheus will scrape targets
    scrape_interval: 10s
    # controls how often Prometheus will evaluate rules. Prometheus uses rules to create new time series and to generate alerts
    # evaluation_interval: 10s
    static_configs:
      - targets: ['192.168.241.157:8080']